/**
 * Pre-generated valid Tuya IR codes for testing.
 *
 * These are REAL codes generated by HVACCodeGenerator that will:
 * 1. Decode successfully from Base64
 * 2. Have proper IR timing patterns
 * 3. Match known protocols (Fujitsu, Daikin, etc.)
 */
class TestCodes {

    // Load HVACCodeGenerator from inlined app file
    private static Class HVACCodeGenerator = loadHVACCodeGenerator()

    private static Class loadHVACCodeGenerator() {
        def appScript = new File("app.groovy")
        def shell = new GroovyShell()
        def script = shell.parse(appScript)
        return script.class.classLoader.loadClass('HVACCodeGenerator')
    }

    // Fujitsu codes
    static final String FUJITSU_OFF = generateFujitsuOff()
    static final String FUJITSU_COOL_24_AUTO = generateFujitsuCool(24, "auto")
    static final String FUJITSU_COOL_22_AUTO = generateFujitsuCool(22, "auto")
    static final String FUJITSU_COOL_16_AUTO = generateFujitsuCool(16, "auto")
    static final String FUJITSU_COOL_30_AUTO = generateFujitsuCool(30, "auto")
    static final String FUJITSU_HEAT_26_HIGH = generateFujitsuHeat(26, "high")
    static final String FUJITSU_COOL_LOW_22 = generateFujitsuCool(22, "low")
    static final String FUJITSU_COOL_MID_22 = generateFujitsuCool(22, "medium")
    static final String FUJITSU_COOL_HIGH_22 = generateFujitsuCool(22, "high")

    // Daikin codes
    static final String DAIKIN_OFF = generateDaikinOff()
    static final String DAIKIN_COOL_24_AUTO = generateDaikinCool(24, "auto")
    static final String DAIKIN_COOL_22_AUTO = generateDaikinCool(22, "auto")

    // Panasonic codes
    static final String PANASONIC_OFF = generatePanasonicOff()
    static final String PANASONIC_COOL_20_AUTO = generatePanasonicCool(20, "auto")

    // Mitsubishi codes
    static final String MITSUBISHI_OFF = generateMitsubishiOff()
    static final String MITSUBISHI_HEAT_26_HIGH = generateMitsubishiHeat(26, "high")

    // LG codes
    static final String LG_OFF = generateLgOff()
    static final String LG_COOL_24_AUTO = generateLgCool(24, "auto")

    // Samsung codes
    static final String SAMSUNG_OFF = generateSamsungOff()
    static final String SAMSUNG_FAN_MID_24 = generateSamsungFan(24, "medium")

    // Gree codes
    static final String GREE_OFF = generateGreeOff()
    static final String GREE_COOL_AUTO_22 = generateGreeCool(22, "auto")
    static final String GREE_COOL_LOW_22 = generateGreeCool(22, "low")
    static final String GREE_COOL_MID_22 = generateGreeCool(22, "medium")
    static final String GREE_COOL_HIGH_22 = generateGreeCool(22, "high")

    // Generator methods
    private static String generateFujitsuOff() {
        return HVACCodeGenerator.generateCommand("FUJITSU_AC", "off", "cool", 24, "auto", "off")
    }

    private static String generateFujitsuCool(int temp, String fan) {
        return HVACCodeGenerator.generateCommand("FUJITSU_AC", "on", "cool", temp, fan, "off")
    }

    private static String generateFujitsuHeat(int temp, String fan) {
        return HVACCodeGenerator.generateCommand("FUJITSU_AC", "on", "heat", temp, fan, "off")
    }

    private static String generateDaikinOff() {
        return HVACCodeGenerator.generateCommand("DAIKIN", "off", "cool", 24, "auto", "off")
    }

    private static String generateDaikinCool(int temp, String fan) {
        return HVACCodeGenerator.generateCommand("DAIKIN", "on", "cool", temp, fan, "off")
    }

    private static String generatePanasonicOff() {
        return HVACCodeGenerator.generateCommand("PANASONIC_AC", "off", "cool", 24, "auto", "off")
    }

    private static String generatePanasonicCool(int temp, String fan) {
        return HVACCodeGenerator.generateCommand("PANASONIC_AC", "on", "cool", temp, fan, "off")
    }

    private static String generateMitsubishiOff() {
        return HVACCodeGenerator.generateCommand("MITSUBISHI_AC", "off", "cool", 24, "auto", "off")
    }

    private static String generateMitsubishiHeat(int temp, String fan) {
        return HVACCodeGenerator.generateCommand("MITSUBISHI_AC", "on", "heat", temp, fan, "off")
    }

    private static String generateLgOff() {
        return HVACCodeGenerator.generateCommand("LG", "off", "cool", 24, "auto", "off")
    }

    private static String generateLgCool(int temp, String fan) {
        return HVACCodeGenerator.generateCommand("LG", "on", "cool", temp, fan, "off")
    }

    private static String generateSamsungOff() {
        return HVACCodeGenerator.generateCommand("SAMSUNG_AC", "off", "cool", 24, "auto", "off")
    }

    private static String generateSamsungFan(int temp, String fan) {
        return HVACCodeGenerator.generateCommand("SAMSUNG_AC", "on", "fan", temp, fan, "off")
    }

    private static String generateGreeOff() {
        return HVACCodeGenerator.generateCommand("GREE", "off", "cool", 24, "auto", "off")
    }

    private static String generateGreeCool(int temp, String fan) {
        return HVACCodeGenerator.generateCommand("GREE", "on", "cool", temp, fan, "off")
    }
}
